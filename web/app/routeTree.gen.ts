/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppRouteImport } from './routes/_app/route'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AppProfileImport } from './routes/_app/profile'
import { Route as AppProductImport } from './routes/_app/product'
import { Route as AppAuthImport } from './routes/_app/auth'

// Create/Update Routes

const AppRouteRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppProfileRoute = AppProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppProductRoute = AppProductImport.update({
  id: '/product',
  path: '/product',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppAuthRoute = AppAuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => AppRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/_app/auth': {
      id: '/_app/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AppAuthImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/product': {
      id: '/_app/product'
      path: '/product'
      fullPath: '/product'
      preLoaderRoute: typeof AppProductImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/profile': {
      id: '/_app/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AppProfileImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppRouteImport
    }
  }
}

// Create and export the route tree

interface AppRouteRouteChildren {
  AppAuthRoute: typeof AppAuthRoute
  AppProductRoute: typeof AppProductRoute
  AppProfileRoute: typeof AppProfileRoute
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppAuthRoute: AppAuthRoute,
  AppProductRoute: AppProductRoute,
  AppProfileRoute: AppProfileRoute,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AppRouteRouteWithChildren
  '/auth': typeof AppAuthRoute
  '/product': typeof AppProductRoute
  '/profile': typeof AppProfileRoute
  '/': typeof AppIndexRoute
}

export interface FileRoutesByTo {
  '/auth': typeof AppAuthRoute
  '/product': typeof AppProductRoute
  '/profile': typeof AppProfileRoute
  '/': typeof AppIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteRouteWithChildren
  '/_app/auth': typeof AppAuthRoute
  '/_app/product': typeof AppProductRoute
  '/_app/profile': typeof AppProfileRoute
  '/_app/': typeof AppIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/auth' | '/product' | '/profile' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/auth' | '/product' | '/profile' | '/'
  id:
    | '__root__'
    | '/_app'
    | '/_app/auth'
    | '/_app/product'
    | '/_app/profile'
    | '/_app/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app"
      ]
    },
    "/_app": {
      "filePath": "_app/route.tsx",
      "children": [
        "/_app/auth",
        "/_app/product",
        "/_app/profile",
        "/_app/"
      ]
    },
    "/_app/auth": {
      "filePath": "_app/auth.tsx",
      "parent": "/_app"
    },
    "/_app/product": {
      "filePath": "_app/product.tsx",
      "parent": "/_app"
    },
    "/_app/profile": {
      "filePath": "_app/profile.tsx",
      "parent": "/_app"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
